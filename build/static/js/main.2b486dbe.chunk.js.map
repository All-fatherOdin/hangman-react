{"version":3,"sources":["components/Header.js","audio/open-cover.mp3","components/LetterContainer.js","audio/wrong-click.mp3","audio/lose.mp3","components/Slipknot.js","components/Keyboard.js","components/EncryptionWord.js","components/StartButton.js","audio/start-game-button.mp3","audio/victory.mp3","components/Main.js","components/EndGame.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","LetterContainer","letter","pressedKeyBoardSymbols","letterStatus","specSymbol","RegExp","useSound","openCoverSound","volume","playbackRate","play","useEffect","coverClassName","match","toLowerCase","Slipknot","gameStatus","pressedLetter","history","wrongClickSound","playWrongClickSound","loseSound","playLoseSound","hangmanParts","document","querySelectorAll","forEach","item","classList","add","invisibleParts","Array","from","filter","contains","length","remove","Promise","resolve","reject","setTimeout","then","push","id","Keyboard","getLetter","onClick","EncryptionWord","renderWord","StartButton","startGame","type","Main","newWord","setGameStatus","useState","letters","setLetters","setPressedLetter","pressedLetterStatus","setPressedLetterStatus","startGameButtonSound","playStartGameButtonSound","victorySound","playVictorySound","encryptedLetters","spaces","checkGuessed","path","i","map","e","target","textContent","setAttribute","buttonOff","includes","EndGame","children","setRender","render","apiMovies","infoForFetch","this","_key","key","_headers","headers","_baseUrl","baseUrl","res","ok","json","status","Math","floor","random","fetch","_getPageNumber","_checkResponse","App","setNewWord","useHistory","getRandomWord","wordsMass","randomWord","results","title","window","addEventListener","event","preventDefault","to","word","getMovies","arr","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","basename","getElementById"],"mappings":"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","file":"static/js/main.2b486dbe.chunk.js","sourcesContent":["function Header() {\r\n   return(\r\n      <header className=\"header\">\r\n         <h1 className=\"header__title\">Hangman</h1>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header;","export default __webpack_public_path__ + \"static/media/open-cover.b39044a0.mp3\";","import { useEffect } from 'react';\r\nimport useSound from 'use-sound';\r\nimport openCoverSound from '../audio/open-cover.mp3'\r\n\r\nfunction LetterContainer({ letter, pressedKeyBoardSymbols, letterStatus }) {\r\n   const regLetters = /[^а-яА-ЯЁё]+/g;\r\n   const specSymbol = new RegExp(regLetters)\r\n   const [play] = useSound(openCoverSound, { volume: 0.1, playbackRate: 1.7 })\r\n\r\n   useEffect(() => {\r\n      if (letterStatus) play()\r\n   }, [letterStatus, play, pressedKeyBoardSymbols])\r\n\r\n   const coverClassName = letter.match(specSymbol) ? \"encryption-word__cover\" :\r\n      pressedKeyBoardSymbols[`${letter === \"ё\" ? 'е' : letter.toLowerCase()}`] ? \r\n      \"encryption-word__cover\" : \"encryption-word__cover put-up-block\";\r\n\r\n   return(\r\n      <>\r\n      {  \r\n         letter === \" \" ? <div className=\"encryption-word__space\"></div> : \r\n         <li className=\"encryption-word__letter-container\">\r\n            <h2 className={\"encryption-word__letter\"}>\r\n               {letter}\r\n            </h2>\r\n            <div className={coverClassName}></div>\r\n         </li>\r\n      }\r\n      </>\r\n   )\r\n} \r\n\r\nexport default LetterContainer;","export default __webpack_public_path__ + \"static/media/wrong-click.fe297604.mp3\";","export default __webpack_public_path__ + \"static/media/lose.fbcf06de.mp3\";","import { useEffect } from \"react\"\r\nimport useSound from 'use-sound';\r\nimport wrongClickSound from '../audio/wrong-click.mp3'\r\nimport loseSound from '../audio/lose.mp3'\r\n\r\nfunction Slipknot({ letterStatus, gameStatus, pressedLetter, history}) {\r\n   const [playWrongClickSound] = useSound(wrongClickSound, { volume: 0.25 })\r\n   const [playLoseSound] = useSound(loseSound, { volume: 1 })\r\n\r\n   const hangmanParts = document.querySelectorAll(\"#hangman-part\");\r\n\r\n   useEffect(() => {\r\n      if(gameStatus){\r\n         hangmanParts.forEach((item) => {\r\n            item.classList.add(\"invisible-block\")\r\n         })\r\n      }\r\n   }, [gameStatus])\r\n\r\n   useEffect(() => {\r\n      const invisibleParts = Array.from(hangmanParts).filter((item) => {\r\n         return item.classList.contains('invisible-block')\r\n      })\r\n      if(invisibleParts.length > 1 && !letterStatus){\r\n         invisibleParts[0].classList.remove('invisible-block')\r\n         playWrongClickSound()\r\n      } else if (invisibleParts.length === 1 && !letterStatus){\r\n         invisibleParts[0].classList.remove('invisible-block')\r\n         playWrongClickSound()\r\n         let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n               resolve()\r\n            }, 1000);\r\n         });\r\n         promise\r\n         .then(()=>{\r\n            history.push('/gameover')\r\n            playLoseSound()\r\n         })\r\n         \r\n      }\r\n   }, [pressedLetter])\r\n\r\n   return(\r\n      <section className=\"hangman\">\r\n            <div className={\"hangman__gallows\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__slipknot\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__head\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__body\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_hand hangman__parts_left\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_hand hangman__parts_right\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_leg hangman__parts_left\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_leg hangman__parts_right\"}></div>\r\n         </section>\r\n   )\r\n}\r\n\r\nexport default Slipknot;","function Keyboard({ getLetter }) {\r\n   return(\r\n      <section className={\"keyboard\"}>\r\n            <div className=\"keyboard__line\">\r\n               <button className=\"keyboard__button\" onClick={getLetter}>й</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ц</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>у</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>к</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>е</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>н</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>г</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ш</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>щ</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>з</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>х</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ъ</button>\r\n            </div>\r\n            <div className=\"keyboard__line\">\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ф</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ы</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>в</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>а</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>п</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>р</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>о</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>л</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>д</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ж</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>э</button>\r\n            </div>\r\n            <div className=\"keyboard__line\">\r\n               <button className=\"keyboard__button\" onClick={getLetter}>я</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ч</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>с</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>м</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>и</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>т</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ь</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>б</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ю</button>\r\n            </div>\r\n         </section>\r\n   )\r\n}\r\n\r\nexport default Keyboard;","function EncryptionWord({ renderWord }) {\r\n   return(\r\n      <section className=\"encryption-word\">\r\n            <ul className=\"encryption-word__container\">\r\n               {renderWord()}\r\n            </ul>\r\n         </section>\r\n   )\r\n}\r\n\r\nexport default EncryptionWord;","function StartButton({ startGame }) {\r\n   return(\r\n      <section className=\"start-game\">\r\n         <button onClick={startGame} className=\"game-button\" type=\"button\">start</button>\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default StartButton;","export default __webpack_public_path__ + \"static/media/start-game-button.0bd8a468.mp3\";","export default __webpack_public_path__ + \"static/media/victory.7202315e.mp3\";","import { useEffect, useState } from 'react'\r\nimport LetterContainer from './LetterContainer';\r\nimport Slipknot from './Slipknot'\r\nimport Keyboard from './Keyboard'\r\nimport EncryptionWord from './EncryptionWord'\r\nimport StartButton from './StartButton'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport useSound from 'use-sound';\r\nimport startGameButtonSound from '../audio/start-game-button.mp3'\r\nimport victorySound from '../audio/victory.mp3'\r\n\r\n\r\nfunction Main({ history, newWord, setGameStatus, gameStatus  }) {\r\n   const [letters, setLetters] = useState({})\r\n   const [pressedLetter, setPressedLetter] = useState('')\r\n   const [pressedLetterStatus, setPressedLetterStatus] = useState();\r\n   const [playStartGameButtonSound] = useSound(startGameButtonSound, { volume: 0.10 })\r\n   const [playVictorySound] = useSound(victorySound, { volume: 0.5 })\r\n   \r\n\r\n   function checkGuessed() {\r\n      const encryptedLetters = document.querySelectorAll('.encryption-word__cover')\r\n      const spaces = document.querySelectorAll('.encryption-word__space')\r\n      const guessedLetters = Array.from(encryptedLetters).filter((letter) => {\r\n         return !letter.classList.contains('put-up-block')\r\n      })\r\n      if(guessedLetters.length + spaces.length === newWord.length && gameStatus === true){\r\n         let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n               resolve()\r\n            }, 1500);\r\n         });\r\n         promise\r\n         .then(()=>{\r\n            history.push('/victory')\r\n            playVictorySound()\r\n         })\r\n      }\r\n   }\r\n   \r\n   useEffect(() => {\r\n      checkGuessed()\r\n   }, [letters])\r\n\r\n   function buttonOff(e){\r\n      e.target.setAttribute('disabled', true)\r\n      e.target.classList.add('keyboard__button_color-pink')\r\n   }\r\n\r\n   function getPressedLetter(e) {\r\n      const letter = e.target.textContent\r\n      setPressedLetter(letter)\r\n      setLetters({...letters, [letter]: true})\r\n      buttonOff(e)\r\n      if (newWord.toLowerCase().includes('ё') && letter === 'е'){\r\n         setPressedLetterStatus(true)\r\n         return;\r\n      }\r\n      setPressedLetterStatus(newWord.toLowerCase().includes(letter))\r\n   }\r\n\r\n   function renderWord(){\r\n      let i = 0;\r\n      const word = Array.from(newWord).map((letter) =>\r\n      (<LetterContainer\r\n         key={i++}\r\n         letter={letter}\r\n         pressedKeyBoardSymbols={letters}\r\n         letterStatus={pressedLetterStatus}\r\n         />))\r\n      return word;\r\n   }\r\n\r\n   function startGame() {\r\n      history.push('/hangman-react/game')\r\n      setGameStatus(true)\r\n      playStartGameButtonSound()\r\n   }\r\n\r\n   useEffect(() => {\r\n      history.push('/hangman-react/start-game')\r\n   }, [])\r\n\r\n   return (\r\n      <main>\r\n         <Slipknot\r\n            letterStatus={pressedLetterStatus}\r\n            gameStatus={gameStatus}\r\n            pressedLetter={pressedLetter}\r\n            history={history}\r\n         />\r\n         <Switch>\r\n            <Route path=\"/hangman-react/start-game\">\r\n               <StartButton \r\n                  startGame={startGame}\r\n               />\r\n            </Route>\r\n            <Route path=\"/hangman-react/game\">\r\n               <EncryptionWord \r\n                  renderWord={renderWord}\r\n               />\r\n               <Keyboard\r\n                  getLetter={getPressedLetter}\r\n               />\r\n            </Route>\r\n         </Switch>\r\n      </main>\r\n   )\r\n}\r\n\r\nexport default Main;","import useSound from 'use-sound';\r\nimport startGameButtonSound from '../audio/start-game-button.mp3'\r\n\r\nfunction EndGame({ history, children, setRender, render, setGameStatus }) {\r\n   const [play] = useSound(startGameButtonSound, { volume: 0.10 })\r\n\r\n   function toStartGame() {\r\n      history.push('/hangman-react/start-game')\r\n      setRender(!render)\r\n      setGameStatus(false)\r\n      play()\r\n   }\r\n\r\n   return(\r\n      <div className=\"popup\">\r\n         {children}\r\n         <button className=\"game-button game-button_popup-fz\" type=\"button\" onClick={toStartGame}>New game</button>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default EndGame;\r\n","class Api {\r\n   constructor(infoForFetch) {\r\n      this._key = infoForFetch.key;\r\n      this._headers = infoForFetch.headers;\r\n      this._baseUrl = infoForFetch.baseUrl;\r\n   }\r\n   _checkResponse(res) {\r\n      if (res.ok) {\r\n         return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка ${res.status}`);\r\n   }\r\n\r\n   _getPageNumber() {\r\n      const number = Math.floor((Math.random() * 10) + 1);\r\n      return number;\r\n   }\r\n\r\n   getMovies() {\r\n      return fetch(`${this._baseUrl}movie/top_rated?${this._key}&language=ru&page=${this._getPageNumber()}`, {\r\n         headers: this._headers\r\n      })\r\n      .then(this._checkResponse)\r\n   }\r\n\r\n}\r\n\r\nconst apiMovies = new Api({baseUrl: \"https://api.themoviedb.org/3/\", key: 'api_key=0706708a09112ac472ec559c98705314', headers: {'Content-Type': 'application/json'}});\r\n\r\nexport default apiMovies;\r\n\r\n\r\n//Ключ API (v3 auth)\r\n//0706708a09112ac472ec559c98705314\r\n\r\n\r\n//Ключ доступа к API (v4 auth)\r\n//eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNzA2NzA4YTA5MTEyYWM0NzJlYzU1OWM5ODcwNTMxNCIsInN1YiI6IjYwZDFiYmQyYmYzMWYyMDA0Njc1NzBhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Mkpk9pkMsco4viRhAYpxmFR67w2j5S36YaiEJGt31zY","import {useEffect, useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom'\nimport EndGame from './EndGame'\nimport apiMovies from '../utils/api'\n\nfunction App() {\n  const [render, setRender] = useState(false)\n  const [gameStatus, setGameStatus] = useState(false)\n  const [newWord, setNewWord] = useState('')\n  const history = useHistory()\n  \n  function getRandomWord(wordsMass) {\n    const regLetters = /[a-zA-z]+/g;\n    const specSymbol = new RegExp(regLetters)\n    let randomWord = wordsMass.results[Math.floor((Math.random() * 20))].title\n    if (randomWord.match(specSymbol) || randomWord.length > 30) {\n      return getRandomWord(wordsMass)\n    } else if (!randomWord.match(specSymbol)){\n      return randomWord;\n    }\n  }\n  \n  useEffect(() => {\n    window.addEventListener('onbeforeunload', (event) => {\n      event.preventDefault();\n      return (<Redirect to=\"/hangman-react/index.html\" />)\n    });\n  })\n\n  useEffect(() => {\n    setGameStatus(false)\n    let word = '';\n    apiMovies.getMovies()\n    .then((arr) => {\n      word = getRandomWord(arr)\n    })\n    .then(() => {\n      console.log(word)\n      setNewWord(word);\n      history.push('/hangman-react/start-game')\n    })\n  }, [render])\n\n  return (\n    <div className = \"page__container\">\n      <Header />\n        <Switch>\n          <Route path=\"/hangman-react\">\n            <Main\n              history={history} \n              newWord={newWord}\n              gameStatus={gameStatus}\n              setGameStatus={setGameStatus}\n            />\n          </Route>\n          <Route path=\"/victory\">\n            <EndGame \n              history={history}\n              render={render}\n              setRender={setRender}\n              setGameStatus={setGameStatus}\n            >\n              <h2 className=\"popup__title\">Victory</h2>\n            </EndGame>\n          </Route>\n          <Route path=\"/gameover\">\n            <EndGame \n              history={history}\n              render={render}\n              setRender={setRender}\n              setGameStatus={setGameStatus}\n            >\n              <h2 className=\"popup__title\">Game Over</h2>\n            </EndGame>\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter basename=\"/hangman-react\">\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}
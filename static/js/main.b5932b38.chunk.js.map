{"version":3,"sources":["components/Header.js","components/LetterContainer.js","components/Slipknot.js","components/Keyboard.js","components/EncryptionWord.js","audio/menu-music.mp3","components/StartButton.js","components/Main.js","components/EndGame.js","utils/api.js","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","LetterContainer","letter","pressedKeyBoardSymbols","specSymbol","RegExp","coverClassName","match","toLowerCase","Slipknot","letterStatus","gameStatus","pressedLetter","history","hangmanParts","document","querySelectorAll","useEffect","forEach","item","classList","add","invisibleParts","Array","from","filter","contains","length","remove","Promise","resolve","reject","setTimeout","then","push","id","Keyboard","getLetter","onClick","EncryptionWord","renderWord","StartButton","startGame","type","Main","newWord","setGameStatus","useState","letters","setLetters","setPressedLetter","pressedLetterStatus","setPressedLetterStatus","encryptedLetters","spaces","guessedLetters","console","log","checkGuessed","path","i","map","e","target","textContent","setAttribute","buttonOff","includes","EndGame","children","setRender","render","apiMovies","infoForFetch","this","_key","key","_headers","headers","_baseUrl","baseUrl","res","ok","json","status","Math","floor","random","fetch","_getPageNumber","_checkResponse","App","setNewWord","useHistory","useSound","menuMusic","volume","getRandomWord","wordsMass","randomWord","results","title","window","addEventListener","event","preventDefault","to","word","getMovies","arr","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.b5932b38.chunk.js","sourcesContent":["function Header() {\r\n   return(\r\n      <header className=\"header\">\r\n         <h1 className=\"header__title\">Hangman</h1>\r\n      </header>\r\n   )\r\n}\r\n\r\nexport default Header;","function LetterContainer({ letter, pressedKeyBoardSymbols }) {\r\n   let regLetters = /[^а-яА-ЯЁё]+/g;\r\n   const specSymbol = new RegExp(regLetters)\r\n\r\n   const letterClassName = letter.match(specSymbol) ? \"encryption-word__letter\":\r\n      pressedKeyBoardSymbols[`${letter.toLowerCase()}`] ? \"encryption-word__letter\" : \"encryption-word__letter put-up-block\";\r\n\r\n   const coverClassName = letter.match(specSymbol) ? \"encryption-word__cover\" :\r\n      pressedKeyBoardSymbols[`${letter.toLowerCase()}`] ? \"encryption-word__cover\" : \"encryption-word__cover put-up-block\";\r\n\r\n   return(\r\n      <>\r\n      {  \r\n         letter === \" \" ? <div className=\"encryption-word__space\"></div> : \r\n         <li className=\"encryption-word__letter-container\">\r\n            <h2 className={\"encryption-word__letter\"}>\r\n               {letter === 'ё' && 'Ё' ? \"е\" : letter}\r\n            </h2>\r\n            <div className={coverClassName}></div>\r\n         </li>\r\n      }\r\n      </>\r\n   )\r\n} \r\n\r\nexport default LetterContainer;","import { useEffect } from \"react\"\r\n\r\nfunction Slipknot({ letterStatus, gameStatus, pressedLetter, history}) {\r\n\r\n   const hangmanParts = document.querySelectorAll(\"#hangman-part\");\r\n\r\n   useEffect(() => {\r\n      if(gameStatus){\r\n         hangmanParts.forEach((item) => {\r\n            item.classList.add(\"invisible-block\")\r\n         })\r\n      }\r\n   }, [gameStatus])\r\n\r\n   useEffect(() => {\r\n      const invisibleParts = Array.from(hangmanParts).filter((item) => {\r\n         return item.classList.contains('invisible-block')\r\n      })\r\n      if(invisibleParts.length > 1 && !letterStatus){\r\n         invisibleParts[0].classList.remove('invisible-block')\r\n      } else if (invisibleParts.length === 1 && !letterStatus){\r\n         invisibleParts[0].classList.remove('invisible-block')\r\n         let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n               resolve()\r\n            }, 1000);\r\n         });\r\n         promise\r\n         .then(()=>{\r\n            history.push('/gameover')\r\n         })\r\n         \r\n      }\r\n   }, [pressedLetter])\r\n\r\n   return(\r\n      <section className=\"hangman\">\r\n            <div className={\"hangman__gallows\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__slipknot\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__head\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__body\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_hand hangman__parts_left\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_hand hangman__parts_right\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_leg hangman__parts_left\"}></div>\r\n            <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_leg hangman__parts_right\"}></div>\r\n         </section>\r\n   )\r\n}\r\n\r\nexport default Slipknot;","function Keyboard({ getLetter }) {\r\n   return(\r\n      <section className={\"keyboard\"}>\r\n            <div className=\"keyboard__line\">\r\n               <button className=\"keyboard__button\" onClick={getLetter}>й</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ц</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>у</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>к</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>е</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>н</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>г</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ш</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>щ</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>з</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>х</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ъ</button>\r\n            </div>\r\n            <div className=\"keyboard__line\">\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ф</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ы</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>в</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>а</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>п</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>р</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>о</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>л</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>д</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ж</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>э</button>\r\n            </div>\r\n            <div className=\"keyboard__line\">\r\n               <button className=\"keyboard__button\" onClick={getLetter}>я</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ч</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>с</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>м</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>и</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>т</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ь</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>б</button>\r\n               <button className=\"keyboard__button\" onClick={getLetter}>ю</button>\r\n            </div>\r\n         </section>\r\n   )\r\n}\r\n\r\nexport default Keyboard;","function EncryptionWord({ renderWord }) {\r\n   return(\r\n      <section className=\"encryption-word\">\r\n            <ul className=\"encryption-word__container\">\r\n               {renderWord()}\r\n            </ul>\r\n         </section>\r\n   )\r\n}\r\n\r\nexport default EncryptionWord;","export default __webpack_public_path__ + \"static/media/menu-music.86a4b3d9.mp3\";","import { useEffect } from 'react';\r\nimport useSound from 'use-sound';\r\nimport menuMusic from '../audio/menu-music.mp3'\r\n\r\nfunction StartButton({ startGame, gameStatus }) {\r\n   // const [play] = useSound(menuMusic, { volume: 0.10 })\r\n   // useEffect(() => {\r\n   //       play()\r\n   // })\r\n\r\n   return(\r\n      <section className=\"start-game\">\r\n         <button onClick={startGame} className=\"game-button\" type=\"button\">start</button>\r\n         {/* <button onClick={play}></button> */}\r\n      </section>\r\n   )\r\n}\r\n\r\nexport default StartButton;","import { useEffect, useState } from 'react'\r\nimport LetterContainer from './LetterContainer';\r\nimport Slipknot from './Slipknot'\r\nimport Keyboard from './Keyboard'\r\nimport EncryptionWord from './EncryptionWord'\r\nimport StartButton from './StartButton'\r\nimport { Switch, Route } from 'react-router-dom'\r\n\r\n\r\nfunction Main({ history, newWord, setGameStatus, gameStatus  }) {\r\n   const [letters, setLetters] = useState({})\r\n   const [pressedLetter, setPressedLetter] = useState('')\r\n   const [pressedLetterStatus, setPressedLetterStatus] = useState();\r\n   \r\n\r\n   function checkGuessed() {\r\n      const encryptedLetters = document.querySelectorAll('.encryption-word__cover')\r\n      const spaces = document.querySelectorAll('.encryption-word__space')\r\n      const guessedLetters = Array.from(encryptedLetters).filter((letter) => {\r\n         return !letter.classList.contains('put-up-block')\r\n      })\r\n      console.log(guessedLetters)\r\n      if(guessedLetters.length + spaces.length === newWord.length && gameStatus === true){\r\n         let promise = new Promise((resolve, reject) => {\r\n            setTimeout(() => {\r\n               resolve()\r\n            }, 1500);\r\n         });\r\n         promise\r\n         .then(()=>{\r\n            history.push('/victory')\r\n         })\r\n      }\r\n   }\r\n   \r\n   useEffect(() => {\r\n      checkGuessed()\r\n   }, [letters])\r\n\r\n   function buttonOff(e){\r\n      e.target.setAttribute('disabled', true)\r\n      e.target.classList.add('keyboard__button_color-pink')\r\n   }\r\n\r\n   function getPressedLetter(e) {\r\n      const letter = e.target.textContent\r\n      setPressedLetter(letter)\r\n      setLetters({...letters, [letter]: true})\r\n      buttonOff(e)\r\n      setPressedLetterStatus(newWord.toLowerCase().includes(letter))\r\n   }\r\n\r\n   function renderWord(){\r\n      let i = 0;\r\n      const word = Array.from(newWord).map((letter) =>\r\n      (<LetterContainer\r\n         key={i++}\r\n         letter={letter}\r\n         pressedKeyBoardSymbols={letters}\r\n         />))\r\n      return word;\r\n   }\r\n\r\n   function startGame() {\r\n      history.push('/hangman-react/game')\r\n      setGameStatus(true)\r\n   }\r\n\r\n   useEffect(() => {\r\n      history.push('/hangman-react/start-game')\r\n   }, [])\r\n\r\n   return (\r\n      <main>\r\n         <Slipknot\r\n            letterStatus={pressedLetterStatus}\r\n            gameStatus={gameStatus}\r\n            pressedLetter={pressedLetter}\r\n            history={history}\r\n         />\r\n         <Switch>\r\n            <Route path=\"/hangman-react/start-game\">\r\n               <StartButton \r\n                  startGame={startGame}\r\n                  gameStatus={gameStatus}\r\n               />\r\n            </Route>\r\n            <Route path=\"/hangman-react/game\">\r\n               <EncryptionWord \r\n                  renderWord={renderWord}\r\n               />\r\n               <Keyboard\r\n                  getLetter={getPressedLetter}\r\n               />\r\n            </Route>\r\n         </Switch>\r\n      </main>\r\n   )\r\n}\r\n\r\nexport default Main;","function EndGame({ history, children, setRender, render, setGameStatus }) {\r\n   function toStartGame() {\r\n      history.push('/hangman-react/start-game')\r\n      setRender(!render)\r\n      setGameStatus(false)\r\n   }\r\n   return(\r\n      <div className=\"popup\">\r\n         {children}\r\n         <button className=\"game-button game-button_popup-fz\" type=\"button\" onClick={toStartGame}>New game</button>\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default EndGame;\r\n","class Api {\r\n   constructor(infoForFetch) {\r\n      this._key = infoForFetch.key;\r\n      this._headers = infoForFetch.headers;\r\n      this._baseUrl = infoForFetch.baseUrl;\r\n   }\r\n   _checkResponse(res) {\r\n      if (res.ok) {\r\n         return res.json();\r\n      }\r\n      return Promise.reject(`Ошибка ${res.status}`);\r\n   }\r\n\r\n   _getPageNumber() {\r\n      const number = Math.floor((Math.random() * 10) + 1);\r\n      return number;\r\n   }\r\n\r\n   getMovies() {\r\n      return fetch(`${this._baseUrl}movie/top_rated?${this._key}&language=ru&page=${this._getPageNumber()}`, {\r\n         headers: this._headers\r\n      })\r\n      .then(this._checkResponse)\r\n   }\r\n\r\n}\r\n\r\nconst apiMovies = new Api({baseUrl: \"https://api.themoviedb.org/3/\", key: 'api_key=0706708a09112ac472ec559c98705314', headers: {'Content-Type': 'application/json'}});\r\n\r\nexport default apiMovies;\r\n\r\n\r\n//Ключ API (v3 auth)\r\n//0706708a09112ac472ec559c98705314\r\n\r\n\r\n//Ключ доступа к API (v4 auth)\r\n//eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIwNzA2NzA4YTA5MTEyYWM0NzJlYzU1OWM5ODcwNTMxNCIsInN1YiI6IjYwZDFiYmQyYmYzMWYyMDA0Njc1NzBhNSIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.Mkpk9pkMsco4viRhAYpxmFR67w2j5S36YaiEJGt31zY","import {useEffect, useState} from 'react';\nimport Header from './Header';\nimport Main from './Main';\nimport { Switch, Route, useHistory, Redirect } from 'react-router-dom'\nimport EndGame from './EndGame'\nimport apiMovies from '../utils/api'\nimport useSound from 'use-sound';\nimport menuMusic from '../audio/menu-music.mp3'\n\nfunction App() {\n  const [render, setRender] = useState(false)\n  const [gameStatus, setGameStatus] = useState(false)\n  const [newWord, setNewWord] = useState('')\n  const history = useHistory()\n  const [play] = useSound(menuMusic, { volume: 0.10 })\n  \n  function getRandomWord(wordsMass) {\n    const regLetters = /[a-zA-z]+/g;\n    const specSymbol = new RegExp(regLetters)\n    let randomWord = wordsMass.results[Math.floor((Math.random() * 20))].title\n    if (randomWord.match(specSymbol) || randomWord.length > 30) {\n      console.log(`не совпало ${randomWord}`)\n      return getRandomWord(wordsMass)\n    } else if (!randomWord.match(specSymbol)){\n      return randomWord;\n    }\n  }\n  \n  useEffect(() => {\n    window.addEventListener('onbeforeunload', (event) => {\n      event.preventDefault();\n      return (<Redirect to=\"/hangman-react/index.html\" />)\n    });\n  })\n\n\n  useEffect(() => {\n    setGameStatus(false)\n    let word = '';\n\n    apiMovies.getMovies()\n    .then((arr) => {\n      console.log(arr)\n      word = getRandomWord(arr)\n    })\n    .then(() => {\n      console.log(word)\n      setNewWord(word);\n      history.push('/hangman-react/start-game')\n    })\n  }, [render])\n\n  return (\n    <div className = \"page__container\">\n      <Header />\n        <Switch>\n          <Route path=\"/hangman-react\">\n            <Main\n              history={history} \n              newWord={newWord}\n              gameStatus={gameStatus}\n              setGameStatus={setGameStatus}\n            />\n          </Route>\n          <Route path=\"/victory\">\n            <EndGame \n              history={history}\n              render={render}\n              setRender={setRender}\n              setGameStatus={setGameStatus}\n            >\n              <h2 className=\"popup__title\">Victory</h2>\n            </EndGame>\n          </Route>\n          <Route path=\"/gameover\">\n            <EndGame \n              history={history}\n              render={render}\n              setRender={setRender}\n              setGameStatus={setGameStatus}\n            >\n              <h2 className=\"popup__title\">Game Over</h2>\n            </EndGame>\n          </Route>\n        </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport reportWebVitals from './reportWebVitals';\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <BrowserRouter>\n      <App />\n    </BrowserRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}
{"version":3,"sources":["components/Header.js","components/LetterContainer.js","audio/wrong-click.mp3","audio/lose.mp3","components/Slipknot.js","components/Keyboard.js","components/EncryptionWord.js","components/StartButton.js","audio/victory.mp3","audio/open-cover.mp3","components/Main.js","components/EndGame.js","utils/api.js","vendor/key.js","audio/start-game-button.mp3","components/App.js","reportWebVitals.js","index.js"],"names":["Header","className","LetterContainer","letter","pressedKeyBoardSymbols","regexp","RegExp","coverClassName","match","toLowerCase","Slipknot","letterStatus","gameStatus","pressedLetters","history","setTimeOut","useSound","wrongClickSound","volume","playWrongClickSound","loseSound","playLoseSound","hangmanParts","document","querySelectorAll","makePartsVisible","invisibleParts","classList","remove","setGameOver","push","changePartsVisibility","Array","from","filter","item","contains","length","then","useEffect","forEach","add","id","Keyboard","getLetter","onClick","EncryptionWord","renderWord","StartButton","startGame","type","Main","newWord","playStartGameSound","useState","setGameStatus","setPressedLetters","pressedLetterStatus","setPressedLetterStatus","victorySound","playVictorySound","openCoverSound","playbackRate","playOpenCoverSound","spaces","encryptedLetters","promise","Promise","resolve","reject","setTimeout","setVictory","checkGuessedLetters","path","i","map","splitNewWord","e","target","textContent","setAttribute","buttonOff","includes","EndGame","children","toStartGame","apiMovies","infoForFetch","this","_baseUrl","baseUrl","_key","key","res","ok","json","status","Math","floor","random","fetch","_getPageNumber","headers","_checkResponse","App","setWord","render","setRender","useHistory","startGameSound","getMoviesList","word","getMovies","moviesList","results","title","getMovieName","console","log","checkNewWord","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.e1bddbe2.chunk.js","sourcesContent":["function Header() {\r\n   return (\r\n      <header className=\"header\">\r\n         <h1 className=\"header__title\">Hangman</h1>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default Header;","function LetterContainer({ letter, pressedKeyBoardSymbols }) {\r\n   const regStr = /[^а-яА-Яё]+/g;\r\n   const regexp = new RegExp(regStr);\r\n   \r\n   const coverClassName = letter.match(regexp) ? \"encryption-word__cover\" :\r\n   pressedKeyBoardSymbols[`${letter === \"ё\" ? \"е\" : letter.toLowerCase()}`] ? \r\n   \"encryption-word__cover\" : \"encryption-word__cover put-up-block\";\r\n\r\n   return (\r\n      <>\r\n         { \r\n            letter === \" \" ? <div className=\"encryption-word__space\"></div> :\r\n            <li className=\"encryption-word__letter-container\">\r\n               <h2 className={\"encryption-word__letter\"}>\r\n                  {letter}\r\n               </h2>\r\n               <div className={coverClassName}></div>\r\n            </li>\r\n         }\r\n      </>\r\n   );\r\n}; \r\n\r\nexport default LetterContainer;","export default __webpack_public_path__ + \"static/media/wrong-click.fe297604.mp3\";","export default __webpack_public_path__ + \"static/media/lose.fbcf06de.mp3\";","import { useEffect } from \"react\";\r\nimport useSound from 'use-sound';\r\nimport wrongClickSound from '../audio/wrong-click.mp3';\r\nimport loseSound from '../audio/lose.mp3';\r\n\r\nfunction Slipknot({ letterStatus, gameStatus, pressedLetters, history, setTimeOut }) {\r\n   const [playWrongClickSound] = useSound(wrongClickSound, { volume: 0.1 });\r\n   const [playLoseSound] = useSound(loseSound, { volume: 0.50 });\r\n   const hangmanParts = document.querySelectorAll(\"#hangman-part\");\r\n\r\n   function getInvisibleParts(){\r\n      return Array.from(hangmanParts).filter((item) => {\r\n         return item.classList.contains('invisible-block');\r\n      })\r\n   }\r\n\r\n   function makePartsVisible(invisibleParts) {\r\n      invisibleParts[0].classList.remove('invisible-block');\r\n      playWrongClickSound();\r\n   }\r\n\r\n   function setGameOver() {\r\n      history.push('/gameover')\r\n      playLoseSound()\r\n   }\r\n\r\n   function changePartsVisibility() {\r\n      const invisibleParts = getInvisibleParts();\r\n      if (invisibleParts.length > 1 && !letterStatus) {\r\n         makePartsVisible(invisibleParts);\r\n         return;\r\n      } \r\n      if (invisibleParts.length === 1 && !letterStatus) {\r\n         makePartsVisible(invisibleParts);\r\n         setTimeOut\r\n         .then(setGameOver);\r\n      };\r\n   };\r\n\r\n   function makePartsInvisible() {\r\n      if (gameStatus) {\r\n         hangmanParts.forEach((item) => {\r\n            item.classList.add(\"invisible-block\");\r\n         });\r\n      };\r\n   };\r\n\r\n   useEffect(() => {\r\n      makePartsInvisible();\r\n   }, [gameStatus]);\r\n\r\n   useEffect(() => {\r\n      changePartsVisibility();\r\n   }, [pressedLetters]);\r\n\r\n   return (\r\n      <section className=\"hangman\">\r\n         <div className={\"hangman__gallows\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__slipknot\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__head\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__body\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_hand hangman__parts_left\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_hand hangman__parts_right\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_leg hangman__parts_left\"}></div>\r\n         <div id=\"hangman-part\" className={\"hangman__parts hangman__parts_leg hangman__parts_right\"}></div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Slipknot;","function Keyboard({ getLetter }) {\r\n   return (\r\n      <section className=\"keyboard\">\r\n         <div className=\"keyboard__line\">\r\n            <button className=\"keyboard__button\" onClick={getLetter}>й</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ц</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>у</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>к</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>е</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>н</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>г</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ш</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>щ</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>з</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>х</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ъ</button>\r\n         </div>\r\n         <div className=\"keyboard__line\">\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ф</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ы</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>в</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>а</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>п</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>р</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>о</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>л</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>д</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ж</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>э</button>\r\n         </div>\r\n         <div className=\"keyboard__line\">\r\n            <button className=\"keyboard__button\" onClick={getLetter}>я</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ч</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>с</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>м</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>и</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>т</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ь</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>б</button>\r\n            <button className=\"keyboard__button\" onClick={getLetter}>ю</button>\r\n         </div>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default Keyboard;","function EncryptionWord({ renderWord }) {\r\n   return (\r\n      <section className=\"encryption-word\">\r\n         <ul className=\"encryption-word__container\">\r\n            {renderWord()}\r\n         </ul>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default EncryptionWord;","function StartButton({ startGame }) {\r\n   return (\r\n      <section className=\"start-game\">\r\n         <button \r\n            onClick={startGame} \r\n            className=\"game-button\" \r\n            type=\"button\"\r\n         >\r\n            start\r\n         </button>\r\n      </section>\r\n   );\r\n};\r\n\r\nexport default StartButton;","export default __webpack_public_path__ + \"static/media/victory.7202315e.mp3\";","export default __webpack_public_path__ + \"static/media/open-cover.b39044a0.mp3\";","import { useEffect, useState } from 'react';\r\nimport LetterContainer from './LetterContainer';\r\nimport Slipknot from './Slipknot';\r\nimport Keyboard from './Keyboard';\r\nimport EncryptionWord from './EncryptionWord';\r\nimport StartButton from './StartButton';\r\nimport { Switch, Route } from 'react-router-dom';\r\nimport useSound from 'use-sound';\r\nimport victorySound from '../audio/victory.mp3';\r\nimport openCoverSound from '../audio/open-cover.mp3';\r\n\r\nfunction Main({ history, newWord, playStartGameSound }) {\r\n   const [gameStatus, setGameStatus] = useState(false);\r\n   const [pressedLetters, setPressedLetters] = useState({});\r\n   const [pressedLetterStatus, setPressedLetterStatus] = useState(false);\r\n   \r\n   const [playVictorySound] = useSound(victorySound, { volume: 0.5 });\r\n   const [playOpenCoverSound] = useSound(openCoverSound, { volume: 0.4, playbackRate: 1 });\r\n\r\n   const spaces = document.querySelectorAll(\".encryption-word__space\");\r\n   const encryptedLetters = document.querySelectorAll('.encryption-word__cover');\r\n   const promise = new Promise((resolve, reject) => {\r\n      setTimeout(() => {\r\n         resolve();\r\n      }, 2000);\r\n   });\r\n\r\n   function getGuessedLetters() {\r\n      return Array.from(encryptedLetters).filter((letter) => {\r\n         return !letter.classList.contains('put-up-block');\r\n      });\r\n   };\r\n\r\n   function setVictory() {\r\n      history.push('/victory');\r\n      playVictorySound();\r\n   };\r\n   \r\n   function checkGuessedLetters() {\r\n      const guessedLetters = getGuessedLetters()\r\n      if (guessedLetters.length + spaces.length === newWord.length && gameStatus) {\r\n         promise\r\n         .then(setVictory);\r\n      };\r\n   };\r\n\r\n   function buttonOff(e) {\r\n      e.target.setAttribute('disabled', true);\r\n      e.target.classList.add('keyboard__button_color-pink');\r\n   };\r\n\r\n   function getLetterPressedLetter(e) {\r\n      const letter = e.target.textContent;\r\n      setPressedLetters({...pressedLetters, [letter]: true});\r\n      buttonOff(e);\r\n      if (letter === \"е\" && newWord.includes('ё')) {\r\n         setPressedLetterStatus(true);\r\n         return;\r\n      }\r\n      setPressedLetterStatus(newWord.toLowerCase().includes(letter));\r\n   };\r\n\r\n   function splitNewWord() {\r\n      let i = 0;\r\n      return Array.from(newWord).map((letter) =>\r\n         (<LetterContainer\r\n            key={i++}\r\n            letter={letter}\r\n            pressedKeyBoardSymbols={pressedLetters}\r\n            pressedLetterStatus={pressedLetterStatus}\r\n         />)\r\n      );\r\n   };\r\n\r\n   function renderWord() {\r\n      const word = splitNewWord()\r\n      return word;\r\n   };\r\n\r\n   function startGame() {\r\n      history.push('/main/game');\r\n      setGameStatus(true);\r\n      playStartGameSound();\r\n   };\r\n\r\n   function checkPressedLetterStatus() {\r\n      if (pressedLetterStatus) {\r\n         playOpenCoverSound();\r\n      };\r\n   };\r\n\r\n   useEffect(() => {\r\n      checkGuessedLetters();\r\n      checkPressedLetterStatus()\r\n   }, [pressedLetters]);\r\n\r\n   return (\r\n      <main>\r\n         <Slipknot\r\n            letterStatus={pressedLetterStatus}\r\n            gameStatus={gameStatus}\r\n            pressedLetters={pressedLetters}\r\n            history={history}\r\n            setTimeOut={promise}\r\n         />\r\n         <Switch>\r\n            <Route path=\"/main/start-game\">\r\n               <StartButton \r\n                  startGame={startGame}\r\n               />\r\n            </Route>\r\n            <Route path=\"/main/game\">\r\n               <EncryptionWord \r\n                  renderWord={renderWord}\r\n               />\r\n               <Keyboard\r\n                  getLetter={getLetterPressedLetter}\r\n               />\r\n            </Route>\r\n         </Switch>\r\n      </main>\r\n   );\r\n}\r\n\r\nexport default Main;","function EndGame({ children, toStartGame }) {\r\n   return (\r\n      <div className=\"popup\">\r\n         {children}\r\n         <button \r\n            className=\"game-button game-button_popup-fz\" \r\n            type=\"button\" \r\n            onClick={toStartGame}\r\n         >\r\n            New game\r\n         </button>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default EndGame;\r\n","import key from '../vendor/key'\r\n\r\nclass Api {\r\n   constructor(infoForFetch) {\r\n      this._baseUrl = infoForFetch.baseUrl;\r\n      this._key = infoForFetch.key;\r\n   };\r\n\r\n   _checkResponse(res) {\r\n      if (res.ok) {\r\n         return res.json();\r\n      };\r\n      return Promise.reject(`Ошибка ${res.status}`);\r\n   };\r\n\r\n   _getPageNumber() {\r\n      return (Math.floor(Math.random() * 10) + 1);\r\n   }\r\n\r\n   getMovies() {\r\n      return fetch(`${this._baseUrl}movie/top_rated?${this._key}&language=ru&page=${this._getPageNumber()}`, {\r\n         headers: {\r\n            'Content-Type': 'application/json',\r\n         },\r\n      })\r\n      .then(this._checkResponse);\r\n   }\r\n}\r\n\r\nconst apiMovies = new Api({\r\n   baseUrl: \"https://api.themoviedb.org/3/\", \r\n   key: `api_key=${key}`,\r\n});\r\n\r\nexport default apiMovies;","const key = '0706708a09112ac472ec559c98705314';\r\n\r\nexport default key;","export default __webpack_public_path__ + \"static/media/start-game-button.0bd8a468.mp3\";","import {useEffect, useState} from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport { Switch, Route, useHistory} from 'react-router-dom';\r\nimport EndGame from './EndGame';\r\nimport apiMovies from '../utils/api';\r\nimport useSound from 'use-sound';\r\nimport startGameSound from '../audio/start-game-button.mp3';\r\n\r\nfunction App() {\r\n  const [newWord, setWord] = useState('');\r\n  const [render, setRender] = useState(false);\r\n  const history = useHistory();\r\n  const [playStartGameSound] = useSound(startGameSound, { volume: 0.25 });\r\n  const regStr = /[a-zA-z]+/g;\r\n  const regexp = new RegExp(regStr);\r\n\r\n  function toStartGame() {\r\n    history.push('/main/start-game');\r\n    setRender(!render);\r\n    playStartGameSound();\r\n  };\r\n\r\n  function checkNewWord(word) {\r\n    if (word.length > 25 || word.length < 4 || word.match(regexp)) {\r\n      setRender(!render);\r\n      console.log(`Не прошло ${word}`);\r\n    } else {\r\n      setWord(word);\r\n      console.log(word);\r\n    };\r\n  };\r\n\r\n  function getMovieName(moviesList) {\r\n    return moviesList.results[Math.floor(Math.random() * 20)].title;\r\n  };\r\n\r\n  function getMoviesList(word) {\r\n    apiMovies.getMovies()\r\n    .then((moviesList) => {\r\n      word = getMovieName(moviesList);\r\n    })\r\n    .then(() => {\r\n      checkNewWord(word, regexp)\r\n    })\r\n  }\r\n  \r\n  useEffect(() => {\r\n    let word = '';\r\n    getMoviesList(word);\r\n    history.push('/main/start-game');\r\n  }, [render]);\r\n\r\n  return (\r\n    <div className = \"page__container\">\r\n      <Header />\r\n        <Switch>\r\n          <Route path=\"/main\">\r\n            <Main\r\n              history={history} \r\n              newWord={newWord}\r\n              playStartGameSound={playStartGameSound}\r\n            />\r\n          </Route>\r\n          <Route path=\"/victory\">\r\n            <EndGame \r\n              toStartGame={toStartGame}\r\n            >\r\n              <h2 className=\"popup__title\">Victory</h2>\r\n            </EndGame>\r\n          </Route>\r\n          <Route path=\"/gameover\">\r\n            <EndGame \r\n              toStartGame={toStartGame}\r\n            >\r\n              <h2 className=\"popup__title\">Game Over</h2>\r\n            </EndGame>\r\n          </Route>\r\n        </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter>\r\n      <App />\r\n    </BrowserRouter>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\nreportWebVitals();\r\n"],"sourceRoot":""}